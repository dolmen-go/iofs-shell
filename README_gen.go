//go:build generate

/*
Copyright 2025 Olivier MenguÃ©

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

//go:generate go run README_gen.go

package main

import (
	"fmt"
	"log"
	"os"
	"os/exec"
	"path"
)

// This is a silly README generator that just does
// "go doc . >README.md" in a portable way.
func main() {
	log.SetFlags(0)

	goCmd, err := exec.LookPath("go")
	if err != nil {
		log.Fatal(err)
	}

	cmd := exec.Command(goCmd, "list")
	pkgBytes, err := cmd.Output()
	if err != nil {
		log.Fatal(err)
	}

	pkg := string(pkgBytes)
	name := path.Base(pkg)

	cmd = exec.Command(goCmd, "doc", ".")
	if cmd.Err != nil {
		log.Fatal(cmd.Err)
	}

	f, err := os.Create("README.md")
	if err != nil {
		log.Fatal(err)
	}
	defer f.Close()

	fmt.Fprintf(f, ""+
		"<!-- This file is generated by README_gen.go -->\n"+
		"\n"+
		"# %s\n"+
		"[![GoDoc](https://img.shields.io/badge/godoc-reference-blue.svg)](https://pkg.go.dev/%s)\n"+
		"[![Go Report Card](https://goreportcard.com/badge/%s)](https://goreportcard.com/report/%s)\n"+
		"```\n",
		name, pkg, pkg, pkg,
	)

	cmd.Stdout = f
	if err := cmd.Run(); err != nil {
		log.Fatal(err)
	}

	fmt.Fprintln(f, "```")
}
